{"version":3,"sources":["../node_modules/reactstrap/es/UncontrolledCollapse.js","components/reactstrap/collapse/CollapseSourceCode.js","components/reactstrap/collapse/CollapseDefault.js","components/reactstrap/collapse/CollapseUncontrolled.js","components/reactstrap/collapse/Accordion.js","components/reactstrap/collapse/AccordionShadow.js","components/reactstrap/collapse/AccordionBorder.js","components/reactstrap/collapse/AccordionMargin.js","components/reactstrap/collapse/AccordionHover.js","components/reactstrap/collapse/Collapse.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/prismjs/components/prism-jsx.min.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/reactstrap/es/Collapse.js"],"names":["omitKeys","propTypes","defaultOpen","PropTypes","bool","toggler","string","isRequired","toggleEvents","arrayOf","defaultProps","defaultToggleEvents","UncontrolledCollapse","_Component","props","_this","call","this","togglers","removeEventListeners","toggle","bind","_assertThisInitialized","state","isOpen","_inheritsLoose","_proto","prototype","componentDidMount","findDOMElements","length","addMultipleEventListeners","componentWillUnmount","e","setState","_ref","preventDefault","render","React","createElement","Collapse","_extends","omit","Component","accordion","className","accordionShadow","accordionBorder","accordionMargin","accordionHover","collapseUncontrolled","collapseDefault","collapseItems","id","title","content","CollapseDefault","activeTab","status","toggleTab","tab","toggleCollapse","collapseID","index","indexOf","items","splice","push","onEntered","includes","onEntering","onExited","onExiting","renderCollapse","map","collapseItem","Card","key","onClick","classnames","closing","opening","CardHeader","CardTitle","size","CardBody","Fragment","Nav","tabs","NavItem","NavLink","active","TabContent","TabPane","tabId","CollapseUncontrolled","Accordion","prevState","accordionItems","AccordionShadow","accordionShadowItems","open","AccordionBorder","accordionBorderItems","AccordionMargin","accordionMarginItems","AccordionHover","accordionHoverItems","onMouseEnter","Collaspe","Prism","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","xl","lg","TabContext","createContext","i","t","util","clone","languages","javascript","n","replace","RegExp","source","jsx","extend","tag","pattern","inside","comment","insertBefore","spread","script","alias","rest","o","join","hooks","add","language","r","a","s","type","tagName","pop","openedBraces","g","Token","tokens","pills","vertical","oneOfType","horizontal","justified","fill","navbar","card","tagPropType","cssModule","object","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","getVerticalClass","any","getDerivedStateFromProps","nextProps","_this$props","Object","keys","Provider","value","activeTabId","getClasses","Consumer","_transitionStatusToCl","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","Transition","children","node","innerRef","func","appear","enter","exit","timeout","TransitionTimeouts","transitionStatusToClassHash","TransitionStatuses","ENTERING","ENTERED","EXITING","EXITED","getHeight","scrollHeight","height","name","isAppearing","onExit","offsetHeight","_this2","otherProps","transitionProps","pick","TransitionPropTypeKeys","childProps","in","collapseClass","getTransitionClass","style","ref"],"mappings":"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","file":"static/js/73.dae07755.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Collapse from './Collapse';\nimport { omit, findDOMElements, defaultToggleEvents, addMultipleEventListeners } from './utils';\nvar omitKeys = ['toggleEvents', 'defaultOpen'];\nvar propTypes = {\n  defaultOpen: PropTypes.bool,\n  toggler: PropTypes.string.isRequired,\n  toggleEvents: PropTypes.arrayOf(PropTypes.string)\n};\nvar defaultProps = {\n  toggleEvents: defaultToggleEvents\n};\n\nvar UncontrolledCollapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledCollapse, _Component);\n\n  function UncontrolledCollapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.togglers = null;\n    _this.removeEventListeners = null;\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    return _this;\n  }\n\n  var _proto = UncontrolledCollapse.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.togglers = findDOMElements(this.props.toggler);\n\n    if (this.togglers.length) {\n      this.removeEventListeners = addMultipleEventListeners(this.togglers, this.toggle, this.props.toggleEvents);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.togglers.length && this.removeEventListeners) {\n      this.removeEventListeners();\n    }\n  };\n\n  _proto.toggle = function toggle(e) {\n    this.setState(function (_ref) {\n      var isOpen = _ref.isOpen;\n      return {\n        isOpen: !isOpen\n      };\n    });\n    e.preventDefault();\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(Collapse, _extends({\n      isOpen: this.state.isOpen\n    }, omit(this.props, omitKeys)));\n  };\n\n  return UncontrolledCollapse;\n}(Component);\n\nUncontrolledCollapse.propTypes = propTypes;\nUncontrolledCollapse.defaultProps = defaultProps;\nexport default UncontrolledCollapse;","import React from \"react\"\r\n\r\nexport const accordion = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass Accordion extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Accordion`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionShadow = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionShadow extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionShadowItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              className={classnames({\r\n                open: collapseItem.id === this.state.collapseID\r\n              })}\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate accordion-shadow\">\r\n      {accordionShadowItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionShadow`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionBorder = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionBorder extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionBorderItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              className=\"collapse-border-item\"\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate collapse-border\">\r\n      {accordionBorderItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionBorder`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionMargin = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionMargin extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionMarginItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionMarginItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionMargin`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionHover = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionHover extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionHoverItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionHoverItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionHover\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const collapseUncontrolled = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {UncontrolledCollaspe} from \"reactstrap\"\r\n\r\nclass CollapseUncontrolled extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\r\n        <Card>\r\n          <CardHeader id=\"item-1\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 1\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-1\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-2\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 2\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-2\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-3\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 3\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-3\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-4\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 4\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-4\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default CollapseUncontrolled\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const collapseDefault = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collaspe} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 0,\r\n    title: \"Collapse Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Collapse Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Collapse Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Collapse Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass CollapseDefault extends React.Component {\r\n\r\n  state = {\r\n    collapseItems: []\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    let index = this.state.collapseItems.indexOf(collapseID)\r\n    if (index >= 0) {\r\n      let items = this.state.collapseItems\r\n      items.splice(index, index + 1)\r\n      this.setState({ collapseItems: items })\r\n    } else {\r\n      let items = this.state.collapseItems\r\n      items.push(collapseID)\r\n      this.setState({ collapseItems: items })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const renderCollapse = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\r\n            onEntering={this.onEntering}\r\n            onEntered={this.onEntered}\r\n            onExiting={this.onExiting}\r\n            onExited={this.onExited}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\r\n        {renderCollapse}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default CollapseDefault\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { collapseDefault } from \"./CollapseSourceCode\"\r\nconst collapseItems = [\r\n  {\r\n    id: 0,\r\n    title: \"Collapse Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Collapse Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Collapse Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Collapse Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass CollapseDefault extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseItems: [],\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    let index = this.state.collapseItems.indexOf(collapseID)\r\n    if (index >= 0) {\r\n      let items = this.state.collapseItems\r\n      items.splice(index, index + 1)\r\n      this.setState({ collapseItems: items })\r\n    } else {\r\n      let items = this.state.collapseItems\r\n      items.push(collapseID)\r\n      this.setState({ collapseItems: items })\r\n    }\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const renderCollapse = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseItems.includes(collapseItem.id)\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              With basic collapse you can open multiple items at a time. to add\r\n              bottom border use <code> .collapse-bordered</code> as a wrapper of\r\n              collapse cards.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {renderCollapse}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {collapseDefault}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default CollapseDefault\r\n","import React from \"react\"\r\nimport {\r\n  UncontrolledCollapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { collapseUncontrolled } from \"./CollapseSourceCode\"\r\n\r\nclass CollapseUncontrolled extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Collapse Uncontrolled</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              With uncontrolled collapse you don't have to manage state you can\r\n              toggle collapse with <code>id</code> and <code>toggler</code>\r\n              attribute\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  <Card>\r\n                    <CardHeader id=\"item-1\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 1\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-1\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-2\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 2\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-2\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-3\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 3\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-3\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-4\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 4\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-4\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {collapseUncontrolled}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default CollapseUncontrolled\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordion } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass Accordion extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              You may want to open one item at a time for that you can use\r\n              accordion.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {accordionItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordion}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Accordion\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionShadow } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionShadow extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionShadowItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            open: collapseItem.id === this.state.collapseID\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Shadow</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              use class <code>.accordion-shadow</code> as a wrapper of your\r\n              accordion/collapse card for shadow.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered accordion-shadow\">\r\n                  {accordionShadowItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionShadow}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionShadow\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionBorder } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionBorder extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionBorderItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames(\"collapse-border-item\", {\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Border</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.collapse-border-item</code> with your collapsible\r\n              card.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse\">{accordionBorderItems}</div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionBorder}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionBorder\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionMargin } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionMargin extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionMarginItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <div className=\"collapse-margin\" key={collapseItem.id}>\r\n          <Card\r\n            onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            className={classnames({\r\n              \"collapse-collapsed\":\r\n                this.state.status === \"Closed\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              \"collapse-shown\":\r\n                this.state.status === \"Opened\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              closing:\r\n                this.state.status === \"Closing...\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              opening:\r\n                this.state.status === \"Opening...\" &&\r\n                this.state.collapseID === collapseItem.id\r\n            })}\r\n          >\r\n            <CardHeader>\r\n              <CardTitle className=\"lead collapse-title collapsed\">\r\n                {collapseItem.title}\r\n              </CardTitle>\r\n              <ChevronDown size={15} className=\"collapse-icon\" />\r\n            </CardHeader>\r\n            <Collapse\r\n              isOpen={collapseItem.id === this.state.collapseID}\r\n              onEntering={() => this.onEntering(collapseItem.id)}\r\n              onEntered={() => this.onEntered(collapseItem.id)}\r\n              onExiting={() => this.onExiting(collapseItem.id)}\r\n              onExited={() => this.onExited(collapseItem.id)}\r\n            >\r\n              <CardBody>{collapseItem.content}</CardBody>\r\n            </Collapse>\r\n          </Card>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Margin</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.collapse-Margin</code> as a wrapper of your\r\n              collapseible card.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse\">{accordionMarginItems}</div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionMargin}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionMargin\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionHover } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionHover extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionHoverItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          onMouseEnter={() => this.toggleCollapse(collapseItem.id)}\r\n          key={collapseItem.id}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Hover</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              To create a hover accordion call <code>.toggleCollapse</code> on{\" \"}\r\n              <code>mouseEnter</code> instead of <code>onClick</code>\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {accordionHoverItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionHover}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionHover\r\n","import React from \"react\"\r\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\r\nimport CollapseDefault from \"./CollapseDefault\"\r\nimport CollapseUncontrolled from \"./CollapseUncontrolled\"\r\nimport Accordion from \"./Accordion\"\r\nimport AccordionShadow from \"./AccordionShadow\"\r\nimport AccordionBorder from \"./AccordionBorder\"\r\nimport AccordionMargin from \"./AccordionMargin\"\r\nimport AccordionHover from \"./AccordionHover\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport Prism from \"prismjs\"\r\nimport \"prismjs/components/prism-jsx.min\"\r\nclass Collaspe extends React.Component {\r\n  componentDidMount() {\r\n    Prism.highlightAll()\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BreadCrumbs\r\n          breadCrumbTitle=\"Collapse\"\r\n          breadCrumbParent=\"Components\"\r\n          breadCrumbActive=\"Collapse\"\r\n        />\r\n        <Row>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <CollapseDefault />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <CollapseUncontrolled />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <Accordion />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionShadow />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionBorder />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionMargin />\r\n          </Col>\r\n        </Row>\r\n        <AccordionHover />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Collaspe\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","!function(i){var t=i.util.clone(i.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function n(t,n){return t=t.replace(/<S>/g,function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"}).replace(/<BRACES>/g,function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"}).replace(/<SPREAD>/g,function(){return e}),RegExp(t,n)}e=n(e).source,i.languages.jsx=i.languages.extend(\"markup\",t),i.languages.jsx.tag.pattern=n(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),i.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/i,i.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/i,i.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,i.languages.jsx.tag.inside.comment=t.comment,i.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:n(\"<SPREAD>\"),inside:i.languages.jsx}},i.languages.jsx.tag),i.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:n(\"=<BRACES>\"),inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:i.languages.jsx},alias:\"language-javascript\"}},i.languages.jsx.tag);var o=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(o).join(\"\"):\"\"},r=function(t){for(var n=[],e=0;e<t.length;e++){var a=t[e],s=!1;if(\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===o(a.content[0].content[1])&&n.pop():\"/>\"===a.content[a.content.length-1].content||n.push({tagName:o(a.content[0].content[1]),openedBraces:0}):0<n.length&&\"punctuation\"===a.type&&\"{\"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?n[n.length-1].openedBraces--:s=!0),(s||\"string\"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces){var g=o(a);e<t.length-1&&(\"string\"==typeof t[e+1]||\"plain-text\"===t[e+1].type)&&(g+=o(t[e+1]),t.splice(e+1,1)),0<e&&(\"string\"==typeof t[e-1]||\"plain-text\"===t[e-1].type)&&(g=o(t[e-1])+g,t.splice(e-1,1),e--),t[e]=new i.Token(\"plain-text\",g,null,g)}a.content&&\"string\"!=typeof a.content&&r(a.content)}};i.hooks.add(\"after-tokenize\",function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||r(t.tokens)})}(Prism);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _transitionStatusToCl;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nvar propTypes = _objectSpread(_objectSpread({}, Transition.propTypes), {}, {\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n});\n\nvar defaultProps = _objectSpread(_objectSpread({}, Transition.defaultProps), {}, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      height: null\n    };\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(node, isAppearing) {\n    this.setState({\n      height: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    // getting this variable triggers a reflow\n    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n    this.setState({\n      height: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    this.setState({\n      height: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"]);\n\n    var height = this.state.height;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, transitionProps, {\n      in: isOpen,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = height === null ? null : {\n        height: height\n      };\n      return /*#__PURE__*/React.createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread(_objectSpread({}, childProps.style), style),\n        className: classes,\n        ref: _this2.props.innerRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;"],"sourceRoot":""}