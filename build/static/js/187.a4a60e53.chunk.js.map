{"version":3,"sources":["views/apps/notifications/AddNotification.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["AddNotification","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","axiosConfig","post","state","then","response","console","log","swal","history","push","catch","error","userid","noti_title","desc","studentL","get","data","className","col-sm-6","onClick","onSubmit","this","lg","md","type","placeholder","onChange","map","stud","key","_id","fullname","Ripple","color","Component","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/187.a4a60e53.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../history\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport class AddNotification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userid: \"\",\r\n      noti_title: \"\",\r\n      desc: \"\",\r\n      studentL: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //STUDENT LIST\r\n    axiosConfig\r\n      .get(\"/allusers\")\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        this.setState({ studentL: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    axiosConfig\r\n      .post(\"/addUserNotification\", this.state)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/notifications/notification\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        swal(\"Error!\", \"Error Received\", \"error\");\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Student Notification\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\" btn btn-danger float-right\"\r\n                onClick={() => history.push(\"/app/notifications/notification\")}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Notification Title</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Title\"\r\n                      name=\"noti_title\"\r\n                      value={this.state.noti_title}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Select Student</Label>\r\n                    <CustomInput\r\n                      type=\"select\"\r\n                      placeholder=\"Last Name\"\r\n                      name=\"userid\"\r\n                      value={this.state.userid}\r\n                      onChange={this.changeHandler}\r\n                    >\r\n                      <option>Choose Student ......</option>\r\n                      {this.state.studentL?.map((stud) => (\r\n                        <option key={stud._id} value={stud._id}>\r\n                          {stud.fullname}\r\n                        </option>\r\n                      ))}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Description</Label>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      placeholder=\"Description\"\r\n                      name=\"desc\"\r\n                      value={this.state.desc}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"ml-2 mb-1\"\r\n                >\r\n                  Add\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNotification;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}