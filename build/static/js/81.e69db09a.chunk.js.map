{"version":3,"sources":["components/@vuexy/chips/ChipSourceCode.js","components/@vuexy/chips/ChipsDefault.js","components/@vuexy/chips/ChipsColors.js","components/@vuexy/chips/ChipsAvatarColors.js","components/@vuexy/chips/ChipsIcons.js","components/@vuexy/chips/ChipsClosable.js","components/@vuexy/chips/ClosableIcons.js","components/@vuexy/chips/Chips.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/prismjs/components/prism-jsx.min.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","components/@vuexy/chips/ChipComponent.js"],"names":["chipsDefault","className","chipsColors","chipsAvatarColors","chipsIcons","chipsClosable","chipsClosableIcons","ChipsDefault","state","activeTab","toggleTab","tab","setState","Fragment","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","classnames","active","this","onClick","size","CardBody","TabContent","TabPane","tabId","text","avatarText","avatarIcon","avatarImg","chipImg","closable","React","Component","ChipsColors","color","ChipsAvatarColors","avatarColor","ChipsIcons","ChipsClosable","ChipsClosableIcons","closableIcon","Chips","Prism","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","TabContext","createContext","i","t","util","clone","languages","javascript","e","n","replace","RegExp","source","jsx","extend","tag","pattern","inside","comment","insertBefore","spread","script","alias","rest","o","content","map","join","hooks","add","language","r","length","a","s","type","tagName","pop","push","openedBraces","g","splice","Token","tokens","propTypes","PropTypes","bool","pills","vertical","oneOfType","string","horizontal","justified","fill","navbar","card","tagPropType","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","getVerticalClass","createElement","_extends","defaultProps","any","_Component","_this","call","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","Object","keys","Provider","value","activeTabId","getClasses","Consumer","_ref","Chip","closeChip","target","closest","remove","src","alt","height","width"],"mappings":"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","file":"static/js/81.e69db09a.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport const chipsDefault = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { User } from \"react-feather\"\r\nclass chipDefault extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Chip className=\"mr-1\" text=\"Base Chip\" />\r\n      <Chip className=\"mr-1\" avatarText=\"RX\" text=\"Avatar Text\" />\r\n      <Chip className=\"mr-1\" avatarIcon={<User />} text=\"Avatar Icon\" />\r\n      <Chip className=\"mr-1\" avatarImg={chipImg} text=\"Avatar Image\" />\r\n      <Chip text=\"Chip Closable\" closable />\r\n    )}\r\n}\r\nexport default chipDefault\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const chipsColors = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { User } from \"react-feather\"\r\nclass chipColors extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Chip className=\"mr-1\" color=\"success\" avatarText=\"RX\" text=\"Avatar Text\" />\r\n      <Chip className=\"mr-1\" color=\"info\" avatarIcon={<User />} text=\"Avatar Icon\" />\r\n      <Chip className=\"mr-1\" color=\"warning\" avatarImg={chipImg} text=\"Avatar Image\" />\r\n      <Chip color=\"danger\" text=\"Chip Closable\" closable />\r\n    )}\r\n}\r\nexport default chipColors\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const chipsAvatarColors = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { User } from \"react-feather\"\r\n\r\nclass chipAvatarColors extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Chip className=\"mr-1\" avatarColor=\"primary\" avatarText=\"RX\" text=\"Avatar Text\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"success\" avatarText=\"VS\" text=\"Avatar Text\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"info\" avatarIcon={<User />} text=\"Avatar Text\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"danger\" avatarIcon={<User />} text=\"Avatar Text\" />\r\n      <Chip avatarColor=\"warning\" avatarIcon={<User />} text=\"Avatar Text\" />\r\n    )}\r\n}\r\nexport default chipAvatarColors\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const chipsIcons = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { User, Mail, Share, Slash, Battery, Edit } from \"react-feather\"\r\n\r\nclass chipIcons extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Chip className=\"mr-1\" avatarIcon={<User />} text=\"User Icon\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"primary\" avatarIcon={<Share />} text=\"Share Icon\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"success\" avatarIcon={<Mail />} text=\"Mail Icon\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"danger\" avatarIcon={<Slash />} text=\"Block Icon\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"warning\" avatarIcon={<Battery />} text=\"Battery Icon\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"info\" avatarIcon={<Edit />} text=\"Edit Icon\" />\r\n    )}\r\n}\r\nexport default chipIcons\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const chipsClosable = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport Chip from \"./ChipComponent\"\r\n\r\nclass chipClosable extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Chip className=\"mr-1\" text=\"Dribble\" closable />\r\n      <Chip className=\"mr-1\" text=\"Github\" closable />\r\n      <Chip className=\"mr-1\" text=\"Behance\" closable />\r\n      <Chip className=\"mr-1\" text=\"ReactJS\" closable />\r\n      <Chip text=\"Vuexy\" closable />\r\n    )}\r\n}\r\nexport default chipClosable\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const chipsClosableIcons = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { Trash, Trash2, MinusCircle, Delete } from \"react-feather\"\r\n\r\nclass ChipClosableIcons extends React.Component {\r\n  render() {\r\n    return(\r\n      <Chip className=\"mr-1\" text=\"Dribble\" closableIcon={<Trash />} closable />\r\n      <Chip className=\"mr-1\" text=\"Github\" closableIcon={<Trash2 />} closable />\r\n      <Chip className=\"mr-1\" text=\"Behance\" closableIcon={<Delete />} closable />\r\n      <Chip className=\"mr-1\" text=\"ReactJS\" closableIcon={<MinusCircle />} closable />\r\n    )}\r\n}\r\nexport default ChipClosableIcons\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { Eye, Code, User } from \"react-feather\"\r\nimport { chipsDefault } from \"./ChipSourceCode\"\r\nimport chipImg from \"../../../assets/img/portrait/small/avatar-s-2.jpg\"\r\nclass ChipsDefault extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Default</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>Chips helps you represent simple data with Various options.</p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Chip className=\"mr-1\" text=\"Basic Chip\" />\r\n                <Chip className=\"mr-1\" avatarText=\"RX\" text=\"Avatar Text\" />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarIcon={<User />}\r\n                  text=\"Avatar Icon\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarImg={chipImg}\r\n                  text=\"Avatar Image\"\r\n                />\r\n                <Chip text=\"Chip Closable\" closable />\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {chipsDefault}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default ChipsDefault\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport Chip from \"./ChipComponent\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, User } from \"react-feather\"\r\nimport { chipsColors } from \"./ChipSourceCode\"\r\nimport chipImg from \"../../../assets/img/portrait/small/avatar-s-2.jpg\"\r\nclass ChipsColors extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Colors</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use prop{\" \"}\r\n              <code>color=[primary | success | danger | info | warning ]</code>{\" \"}\r\n              to create a colored chip.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Chip className=\"mr-1\" color=\"primary\" text=\"Primary Chip\" />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  color=\"success\"\r\n                  avatarText=\"RX\"\r\n                  text=\"Avatar Text\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  color=\"info\"\r\n                  avatarIcon={<User />}\r\n                  text=\"Avatar Icon\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  color=\"warning\"\r\n                  avatarImg={chipImg}\r\n                  text=\"Avatar Image\"\r\n                />\r\n                <Chip color=\"danger\" text=\"Chip Closable\" closable />\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {chipsColors}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default ChipsColors\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { Eye, Code, User } from \"react-feather\"\r\nimport { chipsAvatarColors } from \"./ChipSourceCode\"\r\n\r\nclass ChipsAvatarColors extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Avatar Colors</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use prop{\" \"}\r\n              <code>\r\n                avatarColor=[primary | success | danger | info | warning | dark]\r\n              </code>{\" \"}\r\n              to create a colored avatar chip.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"primary\"\r\n                  avatarText=\"RX\"\r\n                  text=\"Avatar Text\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"success\"\r\n                  avatarText=\"VS\"\r\n                  text=\"Avatar Text\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"info\"\r\n                  avatarIcon={<User />}\r\n                  text=\"Avatar Text\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"danger\"\r\n                  avatarIcon={<User />}\r\n                  text=\"Avatar Text\"\r\n                />\r\n                <Chip\r\n                  avatarColor=\"warning\"\r\n                  avatarIcon={<User />}\r\n                  text=\"Avatar Text\"\r\n                />\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {chipsAvatarColors}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default ChipsAvatarColors\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport {\r\n  Eye,\r\n  Code,\r\n  User,\r\n  Share,\r\n  Mail,\r\n  Slash,\r\n  Battery,\r\n  Edit\r\n} from \"react-feather\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { chipsIcons } from \"./ChipSourceCode\"\r\n\r\nclass ChipsIcons extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Icons</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use prop <code>avatarIcon</code> add icon to avatar.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Chip className=\"mr-1\" avatarIcon={<User />} text=\"User Icon\" />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"primary\"\r\n                  avatarIcon={<Share />}\r\n                  text=\"Share Icon\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"success\"\r\n                  avatarIcon={<Mail />}\r\n                  text=\"Mail Icon\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"danger\"\r\n                  avatarIcon={<Slash />}\r\n                  text=\"Block Icon\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"warning\"\r\n                  avatarIcon={<Battery />}\r\n                  text=\"Battery Icon\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"info\"\r\n                  avatarIcon={<Edit />}\r\n                  text=\"Edit Icon\"\r\n                />\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {chipsIcons}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default ChipsIcons\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport Chip from \"./ChipComponent\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { chipsClosable } from \"./ChipSourceCode\"\r\n\r\nclass ChipsClosable extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Chips Closable</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use prop <code>closable</code> to make your chips closable.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Chip className=\"mr-1\" text=\"Dribble\" closable />\r\n                <Chip className=\"mr-1\" text=\"Github\" closable />\r\n                <Chip className=\"mr-1\" text=\"Behance\" closable />\r\n                <Chip className=\"mr-1\" text=\"ReactJS\" closable />\r\n                <Chip text=\"Vuexy\" closable />\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {chipsClosable}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default ChipsClosable\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport {\r\n  Eye,\r\n  Code,\r\n  XCircle,\r\n  Trash,\r\n  Trash2,\r\n  Delete,\r\n  MinusCircle\r\n} from \"react-feather\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { chipsClosableIcons } from \"./ChipSourceCode\"\r\n\r\nclass ChipsClosableIcons extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Customized Closeable Icon</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              You can use prop <code>closableIcon</code> with prop{\" \"}\r\n              <code>closable</code> to create a chip with customized close icon.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  text=\"Dribble\"\r\n                  closableIcon={<Trash />}\r\n                  closable\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  text=\"Github\"\r\n                  closableIcon={<Trash2 />}\r\n                  closable\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  text=\"Behance\"\r\n                  closableIcon={<Delete />}\r\n                  closable\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  text=\"ReactJS\"\r\n                  closableIcon={<MinusCircle />}\r\n                  closable\r\n                />\r\n                <Chip text=\"Vuexy\" closableIcon={<XCircle />} closable />\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {chipsClosableIcons}{\" \"}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default ChipsClosableIcons\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\r\nimport ChipsDefault from \"./ChipsDefault\"\r\nimport ChipsColors from \"./ChipsColors\"\r\nimport ChipsAvatarColors from \"./ChipsAvatarColors\"\r\nimport ChipsIcons from \"./ChipsIcons\"\r\nimport ChipsClosable from \"./ChipsClosable\"\r\nimport ChipsClosableIcons from \"./ClosableIcons\"\r\nimport Prism from \"prismjs\"\r\nimport \"prismjs/components/prism-jsx.min\"\r\nclass Chips extends React.Component {\r\n  componentDidMount() {\r\n    Prism.highlightAll()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BreadCrumbs\r\n          breadCrumbTitle=\"Chips\"\r\n          breadCrumbParent=\"Extra Components\"\r\n          breadCrumbActive=\"Chips\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <ChipsDefault />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <ChipsColors />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <ChipsAvatarColors />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <ChipsIcons />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <ChipsClosable />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <ChipsClosableIcons />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Chips\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","!function(i){var t=i.util.clone(i.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function n(t,n){return t=t.replace(/<S>/g,function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"}).replace(/<BRACES>/g,function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"}).replace(/<SPREAD>/g,function(){return e}),RegExp(t,n)}e=n(e).source,i.languages.jsx=i.languages.extend(\"markup\",t),i.languages.jsx.tag.pattern=n(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),i.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/i,i.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/i,i.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,i.languages.jsx.tag.inside.comment=t.comment,i.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:n(\"<SPREAD>\"),inside:i.languages.jsx}},i.languages.jsx.tag),i.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:n(\"=<BRACES>\"),inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:i.languages.jsx},alias:\"language-javascript\"}},i.languages.jsx.tag);var o=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(o).join(\"\"):\"\"},r=function(t){for(var n=[],e=0;e<t.length;e++){var a=t[e],s=!1;if(\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===o(a.content[0].content[1])&&n.pop():\"/>\"===a.content[a.content.length-1].content||n.push({tagName:o(a.content[0].content[1]),openedBraces:0}):0<n.length&&\"punctuation\"===a.type&&\"{\"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?n[n.length-1].openedBraces--:s=!0),(s||\"string\"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces){var g=o(a);e<t.length-1&&(\"string\"==typeof t[e+1]||\"plain-text\"===t[e+1].type)&&(g+=o(t[e+1]),t.splice(e+1,1)),0<e&&(\"string\"==typeof t[e-1]||\"plain-text\"===t[e-1].type)&&(g=o(t[e-1])+g,t.splice(e-1,1),e--),t[e]=new i.Token(\"plain-text\",g,null,g)}a.content&&\"string\"!=typeof a.content&&r(a.content)}};i.hooks.add(\"after-tokenize\",function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||r(t.tokens)})}(Prism);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import React from \"react\"\r\nimport { X } from \"react-feather\"\r\nclass Chip extends React.Component {\r\n  closeChip = e => {\r\n    e.target.closest(\".chip\").remove()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`chip ${this.props.className} ${\r\n          this.props.color ? `chip-${this.props.color}` : null\r\n        }`}\r\n      >\r\n        <div className=\"chip-body\">\r\n          {(!this.props.avatarImg && this.props.avatarText) ||\r\n          (!this.props.avatarImg && this.props.avatarIcon) ? (\r\n            <div\r\n              className={`avatar ${\r\n                this.props.avatarColor ? `bg-${this.props.avatarColor}` : null\r\n              }`}\r\n            >\r\n              <div className=\"avatar-content\">\r\n                {this.props.avatarText ? this.props.avatarText : null}\r\n                {this.props.avatarIcon ? this.props.avatarIcon : null}\r\n              </div>\r\n            </div>\r\n          ) : this.props.avatarImg ? (\r\n            <div className=\"avatar\">\r\n              <img\r\n                src={this.props.avatarImg}\r\n                alt=\"chipImg\"\r\n                height=\"20\"\r\n                width=\"20\"\r\n              />\r\n            </div>\r\n          ) : null}\r\n          <div className=\"chip-text\">{this.props.text}</div>\r\n          {this.props.closable ? (\r\n            <div className=\"chip-closable\" onClick={e => this.closeChip(e)}>\r\n              {this.props.closableIcon ? this.props.closableIcon : <X />}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chip\r\n"],"sourceRoot":""}